  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: dnloads #added
  labels:
    app: sonarr-ui
    app.kubernetes.io/name: sonarr
    app.kubernetes.io/part-of: dnloads  
  annotations:
    keel.sh/policy: major
    keel.sh/trigger: poll      
    keel.sh/pollSchedule: "@every 4h"
    keel.sh/approvals: "1"
    keel.sh/approvalDeadline: "720" 
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels: 
      app.kubernetes.io/name: sonarr
      app.kubernetes.io/part-of: dnloads

  template:
    metadata:
      labels:
        app: sonarr-ui
        app.kubernetes.io/name: sonarr
        app.kubernetes.io/part-of: dnloads
    spec:
      containers:
      - name: sonarr
        image: lscr.io/linuxserver/sonarr:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8989
        env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        volumeMounts:
        - name: sonarr-data
          mountPath: /config
        - name: sonarr-fs02-media
          mountPath: /mnt/fs02-media  
      nodeSelector:
        deployDnloads: active
      volumes:
        - name: "sonarr-data"
          persistentVolumeClaim:
            claimName: sonarr-data-pvc
        - name: sonarr-fs02-media
          nfs:
            server: 192.168.55.22
            path: /volume1/media

---
apiVersion: v1
kind: Service
metadata:
  name: sonarr-ui
  namespace: dnloads
  labels:
    app: sonarr-ui
spec:
  selector:
    app: sonarr-ui
  ports:
  - port: 8989
    protocol: TCP
    targetPort: 8989
    name: web